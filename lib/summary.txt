✅ 요약 : UI 화면 및 위젯

lib/
├── core/
│   ├── error/
│   │   └── failure.dart
│   ├── util/
│   │   └── constants.dart
│   └── network/
│       └── dio_provider.dart
├── data/
│   ├── auth/
│   │   ├── models/              ← DTO (@JsonSerializable)
│   │   ├── sources/             ← RemoteDataSource (Retrofit)
│   │   └── repositories/        ← AuthRepositoryImpl
│   └── post/
│       ├── models/
│       ├── sources/
│       └── repositories/
├── domain/
│   ├── auth/
│   │   ├── entities/            ← AuthEntity
│   │   ├── repositories/        ← AuthRepository (abstract)
│   │   └── usecases/            ← login, logout
│   └── post/
│       ├── entities/
│       ├── repositories/
│       └── usecases/
├── presentation/
│   ├── auth/
│   │   ├── pages/
│   │   ├── providers/
│   │   └── widgets/
│   └── post/
│       ├── pages/
│       ├── providers/
│       └── widgets/
├── routes/
│   └── app_router.dart         ← go_router 설정
└── main.dart

클린아키텍쳐 계층 구조로 flutter 앱을 만들어
api는 https://jsonplaceholder.typicode.com 를 사용하고
api에서는 로그인, 로그아웃, 포스트 가져오기, 작성하기, 수정하기, 삭제하기가 있어

Either와 실패하는 경우는 Failure클래스 사용할거야
@JsonSerializable()도 사용하고 @RestApi()도 사용할거야
사용라이브러리는 go_router, dartz, dio, flutter_riverpod

각 계층별로 알려줘


lib/
├── application/
│   ├── router/
│   │   └── router_provider.dart
│   └── providers/
│       └── auth_provider.dart
├── data/
│   ├── datasources/
│   │   ├── auth_remote_datasource.dart
│   │   └── post_remote_datasource.dart
│   ├── models/
│   │   ├── user_model.dart
│   │   └── post_model.dart
│   └── repositories_impl/
│       ├── auth_repository_impl.dart
│       └── post_repository_impl.dart
├── domain/
│   ├── entities/
│   │   ├── user.dart
│   │   └── post.dart
│   ├── repositories/
│   │   ├── auth_repository.dart
│   │   └── post_repository.dart
│   └── usecases/
│       ├── login_usecase.dart
│       ├── get_posts_usecase.dart
│       └── create_post_usecase.dart
├── presentation/
│   ├── screens/
│   │   ├── login_screen.dart
│   │   ├── post_list_screen.dart
│   │   └── post_create_screen.dart
│   └── viewmodels/
│       ├── auth_viewmodel.dart
│       └── post_viewmodel.dart
└── main.dart부에서 이동할 땐 go()와 push()가 거의 동일하게 작동합니다